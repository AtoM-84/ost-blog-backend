-- -----------------------------------------------------
-- Schemas OST blog
-- -----------------------------------------------------

BEGIN;

DROP TABLE IF EXISTS "post",
"tag",
"author",
"comment",
"post_has_tag",
"post_has_author";

-- -----------------------------------------------------
-- Table "post"
-- -----------------------------------------------------
CREATE TABLE "post" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
  "title" TEXT NOT NULL UNIQUE,
  "sub_title" TEXT NOT NULL UNIQUE,
  "content" TEXT NOT NULL UNIQUE,
  "created_at" TIMESTAMPTZ DEFAULT NOW(), -- Date où l'on insère un enregistrement dans la base
  "updated_at" TIMESTAMPTZ
);

-- -----------------------------------------------------
-- Table "tag"
-- -----------------------------------------------------
CREATE TABLE "tag" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" TEXT NOT NULL,
  "color" TEXT NOT NULL
);

-- -----------------------------------------------------
-- Table "author"
-- -----------------------------------------------------
CREATE TABLE "author" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" TEXT NOT NULL UNIQUE,
  "email" TEXT NOT NULL UNIQUE
);

-- -----------------------------------------------------
-- Table "comment"
-- -----------------------------------------------------
CREATE TABLE "comment" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "created_at" TIMESTAMPTZ DEFAULT NOW(),
  "content" TEXT NOT NULL UNIQUE,
  "post_id" INTEGER NOT NULL REFERENCES "post"("id"),
  "author_id" INTEGER NOT NULL REFERENCES "author"("id"),
  UNIQUE ("post_id", "author_id")
);

-- -----------------------------------------------------
-- Table "post_has_tag"
-- -----------------------------------------------------
CREATE TABLE "post_has_tag" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "post_id" INTEGER NOT NULL REFERENCES "post"("id") ON DELETE CASCADE,
  "tag_id" INTEGER NOT NULL REFERENCES "tag"("id") ON DELETE CASCADE,
  UNIQUE ("post_id", "tag_id")
);

-- -----------------------------------------------------
-- Table "post_has_author"
-- -----------------------------------------------------
CREATE TABLE "post_has_author" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "post_id" INTEGER NOT NULL REFERENCES "post"("id") ON DELETE CASCADE,
  "author_id" INTEGER NOT NULL REFERENCES "author"("id") ON DELETE CASCADE,
  UNIQUE ("post_id", "author_id")
);


COMMIT; -- Pour mettre fin à au bloc de transaction et l'exécuter